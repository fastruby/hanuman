- content_for :navbar_hanuman do
  active
- content_for :navbar_hanuman_surveys do
  active
- content_for :survey_form_state do
  Edit Report Entry

- if @survey.errors.any?
  - flash.now[:alert] = @survey.errors.full_messages.join(', ').to_s

- current_step = params[:step]
- current_set = params[:set]
- survey_form_state = yield(:survey_form_state).strip

= form_for @survey, builder: CustomFieldsFormBuilder, html: {class: "form-horizontal"} do |f|

  .page-header
    %h5
      Mode:
      %i= survey_form_state
    %h1= f.object.survey_template.name

  = f.hidden_field :survey_template_id
  = f.hidden_field :id unless @survey.new_record?

  -# if step 1 then call form extension partial to include any survey level fields extended by the parent app
  - if current_step == "1"
    = render ("hanuman/surveys/formextension"), f: f

  - sets = @survey.sets
  - first_set = sets.min
  - last_set = sets.max
  - sets.each do |set|
    -# check to see if the current observation set is the last observation set
    - if set != last_set
      -# if the current observation set isn't the last observation set render observations as readonly
      - observations = @survey.observations.filtered_by_set(set)
      - if observations.count > 1
        -# do panel
        = render ("hanuman/surveys/fields/readonly/shared/panel"), show: false, s: @survey, o: observations, set: set, setf: (set == first_set ? true : false), setl: (set == last_set ? true : false)
      - else
        -# do single
        - @survey.observations.filtered_by_set(set).each do |o|
          = render ("hanuman/surveys/fields/readonly/" + o.survey_question.question.answer_type.name), o: o rescue render "hanuman/surveys/fields/readonly/rescue/notsupported", o: o
    - else
      -# start index_offset counter to be increased by 1 for each non blank observation and then ultimately subtracted from the index
      - index_offset = 0
      - @survey.observations.each_with_index do |o, index|
        -# if the current observation group is the last observation group render observations as form fields
        =# debug o
        =# debug o.set
        =# debug current_set
        - if o.set.eql? current_set.to_i
          = f.fields_for :observations, o do |ff|
            .form-entry-item-container
              = ff.hidden_field :survey_question_id
              = render ("hanuman/surveys/fields/" + ff.object.survey_question.question.answer_type.name), ff: ff, index: (index - index_offset) rescue render "hanuman/surveys/fields/rescue/notsupported", ff: ff, index: (index - index_offset)
        - else
          - index_offset += 1
  .form-group
    .col-sm-offset-5.col-sm-7
      - if current_step == "2"
        = link_to "#", class: "btn btn-primary ajax-submit" do
          %span.glyphicon.glyphicon-plus
          Save & Add Entry
        = f.submit "Save & Continue", class: "btn btn-primary"
      - else
        = f.submit (current_step == "1" ? "Save & Continue" : "Finish"), class: "btn btn-primary"
