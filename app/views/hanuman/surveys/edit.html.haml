- content_for :navbar_hanuman_surveys do
  active
- content_for :survey_form_state do
  Edit Report Entry
- content_for :title do
  Edit Survey

- if @survey.errors.any?
  - flash.now[:alert] = @survey.errors.full_messages.join(', ').to_s

- current_step = params[:step].to_i
- current_entry = params[:entry].to_i
- survey_form_state = yield(:survey_form_state).strip

= form_for @survey, builder: CustomFieldsFormBuilder, html: {class: "form-horizontal form-no-enter-key"} do |f|

  .page-header
    %h5
      Mode:
      %i= survey_form_state
    %h1= f.object.survey_template.name

  - steps = @survey.survey_template.survey_steps
  
  .panel.panel-default
    .panel-body
      .survey-progress
        - steps.each do |step|
          .col-sm-4{class: "#{step.step.to_i == current_step.to_i ? 'current' : ''}"}
            %span.glyphicon.progress-mark{class: "#{step_status(@survey, step.step, current_step)}"}
            = "Step " + step.step.to_s

  = f.hidden_field :survey_template_id
  = f.hidden_field :id unless @survey.new_record?

  -# loop through observations
  -# if current step and entry = observation step and entry make editable, otherwise make readonly
  - index_offset = 0
  
  - step_edit = false

  -# this section handles edit on already saved data (a true edit)
  - steps.each do |step|
    - step_observations = @survey.observations.filtered_by_step(step.step)
    - unless step_observations.blank?
      - if step.duplicator
        - entries = @survey.observations.filtered_by_step(step.step).entries
        - entries.each do |entry|
          - entry_observations = @survey.observations.filtered_by_step_and_entry(step.step, entry)
          - if current_step == step.step and current_entry == entry
            - step_edit = true
            .panel.panel-info
              .panel-heading.chevron{:"data-toggle" => "collapse", :"data-target" => "#collapse_#{step.step}_#{entry}"}
                %h4.panel-title.pull-left
                  %span.glyphicon.glyphicon-chevron-right
                  %span.glyphicon.glyphicon-chevron-down
                  %strong
                    Step
                    = step.step
                    Entry
                    = entry
                  %em= "(" + Hanuman::Setting.value("duplicator_step_label") + ")"
                .clearfix
              .panel-collapse.in{:id => "collapse_#{step.step}_#{entry}"}
                .panel-body
                  - entry_observations.each_with_index do |o, index|
                    = f.fields_for :observations, o do |ff|
                      .form-entry-item-container
                        = ff.hidden_field :question_id
                        = render ("hanuman/surveys/fields/" + ff.object.question.answer_type.name), ff: ff, index: (index - index_offset) rescue render "hanuman/surveys/fields/rescue/notsupported", ff: ff, index: (index - index_offset)
          - else
            = render ("hanuman/surveys/fields/readonly/shared/panel"), show: false, survey: @survey, observations: entry_observations, step: step.step, entry: entry, duplicator: true
      - else
        - entry = step_observations.first.entry
        - if current_step == step.step
          - step_edit = true
          .panel.panel-info
            .panel-heading.chevron{:"data-toggle" => "collapse", :"data-target" => "#collapse_#{step}_#{entry}"}
              %h4.panel-title.pull-left
                %span.glyphicon.glyphicon-chevron-right
                %span.glyphicon.glyphicon-chevron-down
                %strong{readonly: true}
                  Step
                  = step.step
                  Entry
                  = entry
              .clearfix
            .panel-collapse.in{:id => "collapse_#{step}_#{entry}"}
              .panel-body                          
                -# if step 1 then call form extension partial to include any survey level fields extended by the parent app
                - if current_step == 1
                  = render ("hanuman/surveys/formextension"), f: f
                - step_observations.each_with_index do |o, index|
                  = f.fields_for :observations, o do |ff|
                    .form-entry-item-container
                      = ff.hidden_field :question_id
                      = render ("hanuman/surveys/fields/" + ff.object.question.answer_type.name), ff: ff, index: (index - index_offset) rescue render "hanuman/surveys/fields/rescue/notsupported", ff: ff, index: (index - index_offset)
        - else
          - unless step.step == 3
            = render ("hanuman/surveys/fields/readonly/shared/panel"), show: false, survey: @survey, observations: step_observations, step: step.step, entry: entry, duplicator: false

  -# this section handles edit on newly created data for steps 2, 3, ... as part of our hacked in step by step wizard
  - unless step_edit
    .panel.panel-info
      .panel-heading.chevron{:"data-toggle" => "collapse", :"data-target" => "#collapse_#{current_step}_#{current_entry}"}
        %h4.panel-title.pull-left
          %span.glyphicon.glyphicon-chevron-right
          %span.glyphicon.glyphicon-chevron-down
          %strong{readonly: true}
            Step
            = current_step
            Entry
            = current_entry
          - if current_step == 2
            %em= "(" + Hanuman::Setting.value("duplicator_step_label") + ")"
        .clearfix
      .panel-collapse.in{:id => "collapse_#{current_step}_#{current_entry}"}
        .panel-body
          - @survey.observations.each_with_index do |o, index|
            -# if the current observation group is the last observation group render observations as form fields
            - if o.id.blank?
              = f.fields_for :observations, o do |ff|
                .form-entry-item-container
                  = ff.hidden_field :question_id
                  = render ("hanuman/surveys/fields/" + ff.object.question.answer_type.name), ff: ff, index: (index - index_offset) rescue render "hanuman/surveys/fields/rescue/notsupported", ff: ff, index: (index - index_offset)
            - else
              - index_offset += 1

  - if current_step == 2
    - max_entry = @survey.max_observation_entry_by_step(current_step)
    .panel.panel-success
      .panel-heading
        .pull-left
          %h5= Hanuman::Setting.value("add_entry_helper_text")
        .pull-right
          = button_tag type: "submit", class: "btn btn-success", name: "next_step", data: {disable_with: "Please wait..."} do
            %span.glyphicon.glyphicon-plus
            Add Entry
        .clearfix
  
  .form-group
    .col-sm-offset-5.col-sm-7
      - if current_step == 2
        = f.submit "Next Step", class: "btn btn-primary", data: {disable_with: "Please wait..."}
      - else
        = f.submit (current_step == 1 ? "Next Step" : "Finish"), class: "btn btn-primary", data: {disable_with: "Please wait..."}
      = link_to "Cancel", root_path, data: {confirm: "Are you sure you want to Cancel?"}, class: "btn btn-default"
