- question_text = q.question_text
- answer_type = q.answer_type.name




- if answer_type == "banner"
  .form-banner
    = question_text

- elsif answer_type == "static"
  .form-static
    = question_text

- elsif answer_type == "helperabove"
  .form-group.helperabove
    .col-sm-offset-5.col-sm-7
      = question_text

- elsif answer_type == "helperbelow"
  .form-group.helperbelow
    .col-sm-offset-5.col-sm-7
      = question_text

- elsif answer_type == "line"
  .page-header




- elsif answer_type == "checkbox"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = check_box_tag nil, nil, false, {disabled: true}




- elsif answer_type == "checkboxlist"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        - q.answer_choices.sorted.each do |a|
          = check_box_tag nil, nil, false, {disabled: true}
          = label_tag nil, a.formatted_answer_choice
          %br/




- elsif answer_type == "chosenmultiselect"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        = select_tag nil, options_from_collection_for_select(q.answer_choices.sorted, :id, :formatted_answer_choice, nil), {multiple: true, size: 10, class: 'chosen-multiselect form-control'}




- elsif answer_type == "chosenmultiselectgrouped"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        = select_tag nil, option_groups_from_collection_for_select(q.answer_choices.roots.sorted, :children, :formatted_answer_choice, :id, :formatted_answer_choice, nil), {multiple: true, size: 10, class: 'chosen-multiselect form-control'}




- elsif answer_type == "chosenselect"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        = select_tag nil, options_from_collection_for_select(q.answer_choices.sorted, :id, :formatted_answer_choice, nil), prompt: 'Please select', class: 'chosen-select form-control'




- elsif answer_type == "datalist"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      = form_for "", builder: CustomFieldsFormBuilder, html: {class: "form-horizontal"} do |f|
        = f.datalist_tag nil, options_for_select(q.answer_choices.map{|ac| ac.formatted_answer_choice}), {list_id: "datalist_" + q.id.to_s + "_list", class: "form-control", readonly: true}




- elsif answer_type == "file"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      = file_field_tag nil, {disabled: true, class: "form-control"}




- elsif answer_type == "multiselect"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        = select_tag nil, options_from_collection_for_select(q.answer_choices.sorted, :id, :formatted_answer_choice, nil), {multiple: true, size: 10, class: 'form-control'}




- elsif answer_type == "multiselectgrouped"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        = select_tag nil, option_groups_from_collection_for_select(q.answer_choices.roots.sorted, :children, :formatted_answer_choice, :id, :formatted_answer_choice, nil), {multiple: true, size: 10, class: 'form-control'}




- elsif answer_type == "radio"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        - q.answer_choices.sorted.each do |ac|
          = radio_button_tag q.id, ac.formatted_answer_choice, false, disabled: true
          = label_tag ac.formatted_answer_choice
          %br/




- elsif answer_type == "range"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      = range_field nil, class: "form-control"




- elsif answer_type == "select"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
      - if q.answer_choices.blank?
        = text_field_tag nil, "There are no available Answer Options!", class: "form-control", readonly: true
      - else
        = select_tag nil, options_from_collection_for_select(q.answer_choices.sorted, :id, :formatted_answer_choice, nil), prompt: 'Please select', class: 'form-control'




- elsif answer_type == "textarea"
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_area_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}




- else
  .form-group
    = label_tag nil, question_text, class: "col-sm-5 control-label"
    .col-sm-7
      = text_field_tag nil, answer_type.upcase, {disabled: true, class: "form-control"}
